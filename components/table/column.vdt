import {Dropdown, DropdownMenu, DropdownItem} from '../dropdown';
import {Checkbox} from '../checkbox';
import {Radio} from '../radio';
import {isStringOrNumber, getRestProps} from '../utils';
import Intact from 'intact';

const normalize = Intact.normalize;

let {
    title, key, group, multiple, ignore,
    sortable, $parent, _show, className, align,
    cols, rows, invisible, exportTitle
} = self.get();

const width = self.width;

const {sort, resizable, container} = $parent.get();
const groupText = group && self._getGroupText() || '';

const thTitle = isStringOrNumber(title) ? title + groupText : undefined;
title = normalize ? normalize(title) : title;

<th {{ ...getRestProps(self) }}
    title={{ thTitle }}
    class={{ {
        'k-sortable': sortable,
        [className]: className,
        [`k-${align}`]: align,
        'k-invisible': invisible,
    } }}
    ev-click={{ self.onClick }}
    data-ignore={{ ignore ? '' : undefined }}
    colspan={{ cols && cols > 1 && cols || undefined }}
    rowspan={{ rows && rows > 1 && rows || undefined }}
>
    <div v-if={{ resizable }} class="k-resize" 
        data-text={{ exportTitle }}
        ev-mousedown={{ self.onDragStart }}
        ev-click={{ self._stopPropagation }} 
    ></div>
    <div class={{ {"k-th": true, "k-group-show": _show} }} data-text={{ !resizable ? exportTitle : undefined }}>
        <div v-if={{ !group }} class="c-ellipsis">
            <b:title>{{ title }}</b:title>
        </div>
        <div class="k-group" v-if={{ group }}>
            <Dropdown container={{ container }}>
                <i class="k-arrow ion-ios-arrow-down"></i>
                <DropdownMenu class={{ {'k-table-dropdown': true, 'k-multiple': multiple} }}
                    ev-$change:value={{ self._onChangeShow }}
                >
                    <DropdownItem v-for={{ group }} 
                        class={{ {'k-active': self._isChecked(value.value)} }}
                        ev-select={{ self._onSelect.bind(self, value.value) }}
                        hideOnSelect={{ !multiple }}
                    >
                        <Checkbox name="key" v-if={{ multiple }}
                            value={{ self._isChecked(value.value) }}
                        >{{ value.label }}</Checkbox>
                        <span v-else>{{ value.label }}</span>
                    </DropdownItem>
                </DropdownMenu>
            </Dropdown>
            <div class="c-ellipsis">
                <b:title>{{ title }}</b:title>
                {{ groupText }}
            </div>
        </div>
        {{ do {
            if (sortable) {
                const type = key === sort.key ? sort.type : '';
                <div class={{ {'k-sort': true, [`k-${type}`]: type} }}>
                    <i class={{ {
                        'k-icon': true,
                        [`icon-${type}`]: type,
                        'icon-sortable': !type,
                    } }}></i>
                </div>
            }
        } }}
    </div>
</th>
