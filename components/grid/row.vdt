import Col from './col';
import {mapChildren} from '../utils';
import gutterStyle from './utils';

let {
    children, className, style,
    justify, align
} = self.get();
const useFlex = self.useFlex;

let gutter = self._getGutter();
let hasGutter = gutter > 0;
if (hasGutter) {
    style = gutterStyle(gutter, style);
}

const classNameObj = {
    'k-row': true,
    [className]: className,
    'k-gutter': hasGutter,
    'k-flex': useFlex,
    [`k-justify-${justify}`]: justify,
    [`k-align-${align}`]: align,
};

/* if (Array.isArray(children)) { */
    /* // order the children by order property like flex's order */
    /* children.sort((a, b) => { */
        /* return (a && a.props && a.props.order || 0) -  */
            /* (b && b.props && b.props.order || 0); */
    /* }); */
/* } */

<div class={{ classNameObj }} style={{ style }}>{{
    mapChildren(children, vNode => {
        if (vNode && vNode.tag === Col) {
            vNode.props = {...vNode.props, gutter};
        }
        return vNode;
    }) 
}}</div>
