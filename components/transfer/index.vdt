import Button from '../button';
import Checkbox from '../checkbox';
import Input from '../input';
import {_$, getRestProps} from '../utils';

const {
    data, className, value, keyName,
    leftChecked, rightChecked, filterable, batchable,
    filter, label, placeholder, leftTitle, rightTitle,
    selectedKeys, enableAdd, enableRemove
} = self.get();

const classNameObj = {
    'k-transfer': true,
    [className]: className,
};

const Panel = props => {
    const keywords = self.get(`${props.model}Keywords`);
    const data = keywords ? 
        props.data.filter(item => filter(item, keywords)) : 
        props.data;
    return <div class="k-panel">
        <div class="k-title">
            <b:header args={{ [props.model] }}>
                <div class="k-count">
                    {{ self.get(`${props.model}Checked.length`) }} /
                    {{ data.length }}
                </div>
                <Checkbox class="c-ellipsis" 
                    value={{ self._isCheckAll(props.model) }}
                    ev-click={{ self._toggleCheckAll.bind(self, props.model) }}
                >{{ props.title }}</Checkbox>
            </b:header>
        </div>
        <b:filter args={{ [props.model] }} v-if={{ filterable }}>
            <Input placeholder={{ placeholder }}
                v-model={{ `${props.model}Keywords` }}
                clearable
                size="small"
            >
                <b:prefix>
                    <i class="ion-ios-search"></i>
                </b:prefix>
            </Input>
        </b:filter>
        <Animate class="k-list" disabled>
            <template>
                <b:list args={{ [props.model] }}>
                    <Animate 
                        v-for={{ data }} 
                        class={{ {"k-item": true, "k-disabled": value.disabled} }}
                        key={{ value[keyName] || value.label || value }}
                        a:transition="c-fade"
                    >
                        <Checkbox v-model={{ `${props.model}CheckedKeys` }} name={{ props.model }}
                            trueValue={{ value[keyName] }}
                            disabled={{ value.disabled }}
                            ev-click={{ self._onCheckboxChange.bind(self, props.model, key) }}
                        >
                            <template>
                                <b:label args={{ [value, key, props.model] }}>
                                    {{ label.call(self, value, key, props.model) }}
                                </b:label>
                            </template>
                        </Checkbox>
                    </Animate>
                </b:list>
            </template>
        </Animate>
    </div>
};

<div class={{ classNameObj }} {{ ...getRestProps(self) }}>
    <Panel data={{ data.filter(item => !~selectedKeys.indexOf(item[keyName])) }}
        model="left" 
        title={{ leftTitle }}
    />
    <div class="k-arrows">
        <Button circle icon disabled={{ !enableRemove() }}
            ev-click={{ self._remove }}
            type="primary"
            size="large"
        >
            <i class="k-icon ion-ios-arrow-left" />
        </Button>
        <Button circle icon disabled={{ !enableAdd() }}
            ev-click={{ self._add }}
            type="primary"
            size="large"
        >
            <i class="k-icon ion-ios-arrow-right" />
        </Button>
    </div>
    <Panel data={{ value }} 
        model="right" 
        title={{ rightTitle }}
    />
</div>
