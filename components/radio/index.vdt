import {getRestProps} from '../utils';
const {
    className, disabled, trueValue, style,
    children, value, ref, key, title, ...rest
} = self.get();

const classNameObj = {
    'k-radio': true,
    'k-disabled': disabled,
    'k-checked': self.isChecked(),
    [className]: className,
};

// let evClick;
const events = [
    'ev-click', 'ev-change',
    'ev-mouseenter', 'ev-mouseleave'
].reduce((memo, name) => {
    if (rest[name]) {
        if (name === 'ev-click' || name === 'ev-change') {
            // don't bind click to label, otherwise it will trigger click event twice
            // don't bind change to input, use click instead of, #448
            // evClick = rest[name];
        } else {
            memo[name] = rest[name];
        }
        delete rest[name];
    }
    return memo;
}, {});

<label class={{ classNameObj }} style={{ style }}
    tabindex={{ disabled ? "-1" : "0" }}
    ev-keypress={{ self._onKeypress }}
    {{ ...events }}
    title={{ title }}
    ev-click={{ self._fixClick }}
>
    <span class="k-wrapper">
        <input type="radio" disabled={{ disabled }}
            value={{ trueValue }}
            tabindex="-1"
            {{ ...getRestProps(self, rest) }}
            ref="input"
            checked={{ value === trueValue }}
            ev-click={{ 
                // (e) => {
                    // _setCheckboxModel(self, 'value', trueValue, false, e, $this);
                    // evClick && evClick(e);
                // } 
                self._onClick
            }}
        />
    </span>
    <span class="k-text" v-if={{ children }}>{{ children }}</span>
</label>
